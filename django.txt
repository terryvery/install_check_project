
1. PYTHON 다운(모든 python 삭제 후 실행)
https://www.python.org/downloads/ 에서 3.9버젼 다운.(이 때 아래 중요한 유의사항!!)
(1). Windows x86-64 executable installer 로 다운로드 클릭 후
(2). Add Python 3.9 to PATH 체크박스 설정 후
(3). customize install 클릭(다음 다음 하다가  location 에 C:\Python39 로 수정)
(4). cmd 켜고 python 쓰면 켜질거야

2. PIP 다운

WINDOW--------------
curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py

python get-pip.py

python -m pip install --upgrade pip
--------------------------------------------------------

LINUX--------------
sudo apt-get install python-pip	#python2.버젼
sudo apt-get install python3-pip	#python3.버젼

pip install -U pip			#업그레이드

--------------------------------------------------------

Mac---------------
sudo easy_install pip

pip install -U pip

--------------------------------------------------------

pip help 로 확인
pip -version

------------------------------------------------
[pip 단축어 정리]
pip list
pip install
pip uninstall
pip search "query"



3. Django 코드 설치---------------
python -m pip install django==버젼(ex. 3.1.4)

Django 설치 확인--------------------
python
import django
print(django.get_version())

장고 버전	파이썬 버전들
1.11	2.7, 3.4, 3.5, 3.6, 3.7(1.11.17에 추가됨)
2.0	3.4, 3.5, 3.6, 3.7
2.1	3.5, 3.6, 3.7
2.2	3.5, 3.6, 3.7, 3.8 (added in 2.2.8), 3.9 (added in 2.2.17)
3.0	3.6, 3.7, 3.8, 3.9 (added in 3.0.11)
3.1	3.6, 3.7, 3.8, 3.9 (added in 3.1.3)



--------------------------------------
C:\>mkdir mydjango

C:\>cd mydjango

C:\mydjango>django-admin.py startproject mysite	//프로젝트 생성

[아래 오류 시]-------------------------------
'django-admin.py'은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는
배치 파일이 아닙니다.

C:\mydjango>

와 같이 django-admin.py가 동작하지 않습니다.

이때는, ;C:\Python25\Lib\site-packages\django\bin경로를 Path에 추가하면 됩니다. 
그럼 아래와 같이 됩니다.
 
Path 경로 모르면  python  실행 후 
import sys
sys.executable
치면 나옵니다.
-----------------------------------------------------------

cd mysite
python manage.py runserver

127.0.0.1:8000/을 들어가면 우리의 장고 프로젝트가 실행된 것을 볼 수 있다.




가상환경 구현하기--------------------------------------------------
(1). GIT 설치하기(https://git-scm.com/downloads)
	- cmd에 git version 쳐서 확인
(2). ANACONDA 설치(https://www.anaconda.com/distribution)
	- Just Me가 아닌 All Users
	- Add Anaconda3 to the system PATH environment variable
	- cmd에 conda --version으로 확인
(3). 가상환경 세팅하기
	- cmd에 conda create --name my_first_env python=3.8.5
	- conda info --envs로 확인

깃허브 회원가입-------------------------------------------------
(1). github.com 가서 회원가입
(2). Create a repository(Owner:terryvery, Repository name: install_check_project, Description: install_check_project를 github에 올려보는 연습!, Public 체크)
(3). 깃허브 업로드 순은 로컬->git 서버 -> git 시스템이며,
	- cmd에서 git에 올릴 폴더로 이동 후 git init
	- git add . 	// git서버에 어떤 파일을 업로드 할 것인지 결정하는 명령어가 add(git add <업로드하려는 파일명>)(이 때, 업로드하려는파일명에 마침표(.)를 이용하면 현재 경로의 모든 파일 및 디렉터리를 의미한다.(git add .))
	- git config --global user.email terryvery@gmail.com
	- git config --global user.name "terryvery"
	- git commit -m "project init"	// git서버에 올릴 파일들을 알려주었다면, 실제로 git서버에 넘겨주는 명령어가 commit(git commit -m "코드의 변경사항을 적는 부분")		
	- git remote add origin https://github.com/terryvery/install_check_project.git	// 로컬저장소와 원격저장소를 연결하는 명령어(git remote add origin <원격저장소주소>
	- git push -u origin master	// git 서버에 올려두었던 내용을 방금 연결한 원격저장소에 실제로 업로드 시키는 명령어 push(git push -u origin master)

	- 